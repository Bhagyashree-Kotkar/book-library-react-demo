{"ast":null,"code":"import axios from \"axios\";\nimport myData from '../../data/db.json';\nconsole.log(myData);\nconst url = \"http://localhost:3001/UserDetails\";\nconst urlOrders = \"http://localhost:3001/Orders\";\nconst urlFavourites = \"http://localhost:3001/Favourites\";\nconst urlCartList = \"http://localhost:3001/Cart\";\nconst urlBooksList = \"http://localhost:3001/books\";\nlet booksListData = [];\nexport const UserLogin = user => {\n  return axios.get(url, {\n    params: {\n      email: user.email,\n      password: user.password,\n      role: user.role\n    }\n  });\n};\n_c = UserLogin;\nexport const UserRegister = newUser => {\n  return axios.post(url, newUser);\n};\n_c2 = UserRegister;\nexport const orderHistory = user => {\n  return axios.get(urlOrders, {\n    params: {\n      email: user.email,\n      role: user.role\n    }\n  });\n};\nexport const booksList = () => {\n  booksListData = axios.get(urlBooksList);\n  return booksListData;\n};\nexport const favouritesList = user => {\n  return axios.get(urlFavourites, {\n    params: {\n      email: user.email,\n      role: user.role\n    }\n  });\n};\nexport const cartList = user => {\n  return axios.get(urlCartList, {\n    params: {\n      email: user.email,\n      role: user.role\n    }\n  });\n};\nexport const addTocart = title => {\n  let bookData = booksListData.find(book => {\n    if (book.title === title) {\n      console.log(book);\n      return book;\n    }\n    return null;\n  });\n  console.log(bookData);\n  if (bookData) {\n    return axios.post(urlCartList, bookData);\n  } else {\n    console.log('Entered book data is not present in db');\n    return Promise.reject(new Error('Entered book data is not present in db'));\n  }\n};\nvar _c, _c2;\n$RefreshReg$(_c, \"UserLogin\");\n$RefreshReg$(_c2, \"UserRegister\");","map":{"version":3,"names":["axios","myData","console","log","url","urlOrders","urlFavourites","urlCartList","urlBooksList","booksListData","UserLogin","user","get","params","email","password","role","_c","UserRegister","newUser","post","_c2","orderHistory","booksList","favouritesList","cartList","addTocart","title","bookData","find","book","Promise","reject","Error","$RefreshReg$"],"sources":["/home/bhagyashree/IdeaProjects/reactDemo/my-react-app/src/services/user.services.js"],"sourcesContent":["import axios from \"axios\"\nimport myData from '../../data/db.json';\n\nconsole.log(myData);\n\nconst url = \"http://localhost:3001/UserDetails\"\nconst urlOrders = \"http://localhost:3001/Orders\";\nconst urlFavourites= \"http://localhost:3001/Favourites\";\nconst urlCartList = \"http://localhost:3001/Cart\";\nconst urlBooksList = \"http://localhost:3001/books\";\n\nlet booksListData = [];\n\nexport const UserLogin = (user) => {\n    return axios.get(url, {\n        params: {\n            email: user.email,\n            password: user.password,\n            role: user.role\n        }\n    })\n}\n\nexport const UserRegister = (newUser) => {\n    return axios.post(url, newUser);\n}\n\nexport const orderHistory = (user) => {\n    return axios.get(urlOrders, {\n        params: {\n            email: user.email,\n            role: user.role\n        }\n    })\n}\n\nexport const booksList = () => {\n    booksListData = axios.get(urlBooksList);\n    return booksListData;\n}\n\nexport const favouritesList = (user) => {\n    return axios.get(urlFavourites, {\n        params: {\n            email: user.email,\n            role: user.role\n        }\n    })\n}\n\nexport const cartList = (user) => {\n    return axios.get(urlCartList, {\n        params: {\n            email: user.email,\n            role: user.role\n        }\n    })\n}\n\nexport const addTocart = (title) => {\n    let bookData = booksListData.find(book => {\n\t\tif (book.title === title) {\n            console.log(book);\n\t\t\treturn book;\n\t\t}\n\t\treturn null;\n\t});\n    console.log(bookData);\n    if (bookData) {\n        return axios.post(urlCartList, bookData);\n    } else {\n        console.log('Entered book data is not present in db');\n        return Promise.reject(new Error('Entered book data is not present in db'));\n    }\n}\n"],"mappings":"AAAA,OAAOA,KAAK,MAAM,OAAO;AACzB,OAAOC,MAAM,MAAM,oBAAoB;AAEvCC,OAAO,CAACC,GAAG,CAACF,MAAM,CAAC;AAEnB,MAAMG,GAAG,GAAG,mCAAmC;AAC/C,MAAMC,SAAS,GAAG,8BAA8B;AAChD,MAAMC,aAAa,GAAE,kCAAkC;AACvD,MAAMC,WAAW,GAAG,4BAA4B;AAChD,MAAMC,YAAY,GAAG,6BAA6B;AAElD,IAAIC,aAAa,GAAG,EAAE;AAEtB,OAAO,MAAMC,SAAS,GAAIC,IAAI,IAAK;EAC/B,OAAOX,KAAK,CAACY,GAAG,CAACR,GAAG,EAAE;IAClBS,MAAM,EAAE;MACJC,KAAK,EAAEH,IAAI,CAACG,KAAK;MACjBC,QAAQ,EAAEJ,IAAI,CAACI,QAAQ;MACvBC,IAAI,EAAEL,IAAI,CAACK;IACf;EACJ,CAAC,CAAC;AACN,CAAC;AAAAC,EAAA,GARYP,SAAS;AAUtB,OAAO,MAAMQ,YAAY,GAAIC,OAAO,IAAK;EACrC,OAAOnB,KAAK,CAACoB,IAAI,CAAChB,GAAG,EAAEe,OAAO,CAAC;AACnC,CAAC;AAAAE,GAAA,GAFYH,YAAY;AAIzB,OAAO,MAAMI,YAAY,GAAIX,IAAI,IAAK;EAClC,OAAOX,KAAK,CAACY,GAAG,CAACP,SAAS,EAAE;IACxBQ,MAAM,EAAE;MACJC,KAAK,EAAEH,IAAI,CAACG,KAAK;MACjBE,IAAI,EAAEL,IAAI,CAACK;IACf;EACJ,CAAC,CAAC;AACN,CAAC;AAED,OAAO,MAAMO,SAAS,GAAGA,CAAA,KAAM;EAC3Bd,aAAa,GAAGT,KAAK,CAACY,GAAG,CAACJ,YAAY,CAAC;EACvC,OAAOC,aAAa;AACxB,CAAC;AAED,OAAO,MAAMe,cAAc,GAAIb,IAAI,IAAK;EACpC,OAAOX,KAAK,CAACY,GAAG,CAACN,aAAa,EAAE;IAC5BO,MAAM,EAAE;MACJC,KAAK,EAAEH,IAAI,CAACG,KAAK;MACjBE,IAAI,EAAEL,IAAI,CAACK;IACf;EACJ,CAAC,CAAC;AACN,CAAC;AAED,OAAO,MAAMS,QAAQ,GAAId,IAAI,IAAK;EAC9B,OAAOX,KAAK,CAACY,GAAG,CAACL,WAAW,EAAE;IAC1BM,MAAM,EAAE;MACJC,KAAK,EAAEH,IAAI,CAACG,KAAK;MACjBE,IAAI,EAAEL,IAAI,CAACK;IACf;EACJ,CAAC,CAAC;AACN,CAAC;AAED,OAAO,MAAMU,SAAS,GAAIC,KAAK,IAAK;EAChC,IAAIC,QAAQ,GAAGnB,aAAa,CAACoB,IAAI,CAACC,IAAI,IAAI;IAC5C,IAAIA,IAAI,CAACH,KAAK,KAAKA,KAAK,EAAE;MAChBzB,OAAO,CAACC,GAAG,CAAC2B,IAAI,CAAC;MAC1B,OAAOA,IAAI;IACZ;IACA,OAAO,IAAI;EACZ,CAAC,CAAC;EACC5B,OAAO,CAACC,GAAG,CAACyB,QAAQ,CAAC;EACrB,IAAIA,QAAQ,EAAE;IACV,OAAO5B,KAAK,CAACoB,IAAI,CAACb,WAAW,EAAEqB,QAAQ,CAAC;EAC5C,CAAC,MAAM;IACH1B,OAAO,CAACC,GAAG,CAAC,wCAAwC,CAAC;IACrD,OAAO4B,OAAO,CAACC,MAAM,CAAC,IAAIC,KAAK,CAAC,wCAAwC,CAAC,CAAC;EAC9E;AACJ,CAAC;AAAA,IAAAhB,EAAA,EAAAI,GAAA;AAAAa,YAAA,CAAAjB,EAAA;AAAAiB,YAAA,CAAAb,GAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}